/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { CreateIntentArgs } from '../types/CreateIntentArgs';
/**
 * @category Instructions
 * @category CreateIntent
 * @category generated
 */
export type CreateIntentInstructionArgs = {
    args: CreateIntentArgs;
};
/**
 * @category Instructions
 * @category CreateIntent
 * @category generated
 */
export declare const createIntentStruct: beet.BeetArgsStruct<CreateIntentInstructionArgs & {
    instructionDiscriminator: number[];
}>;
/**
 * Accounts required by the _createIntent_ instruction
 *
 * @property [_writable_, **signer**] user
 * @property [_writable_] settings
 * @property [_writable_] lockup
 * @property [_writable_] assetMint
 * @property [_writable_] userAssetAta
 * @property [_writable_] lockupAssetVault
 * @property [_writable_] deposit
 * @property [_writable_] intent
 * @property [] clock
 * @category Instructions
 * @category CreateIntent
 * @category generated
 */
export type CreateIntentInstructionAccounts = {
    user: web3.PublicKey;
    settings: web3.PublicKey;
    lockup: web3.PublicKey;
    assetMint: web3.PublicKey;
    userAssetAta: web3.PublicKey;
    lockupAssetVault: web3.PublicKey;
    deposit: web3.PublicKey;
    intent: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    tokenProgram?: web3.PublicKey;
    clock: web3.PublicKey;
    anchorRemainingAccounts?: web3.AccountMeta[];
};
export declare const createIntentInstructionDiscriminator: number[];
/**
 * Creates a _CreateIntent_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CreateIntent
 * @category generated
 */
export declare function createCreateIntentInstruction(accounts: CreateIntentInstructionAccounts, args: CreateIntentInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
